// Code generated by go-swagger; DO NOT EDIT.

package rates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ervitis/freelancetools/exchangerate/models"
)

// GetByDateReader is a Reader for the GetByDate structure.
type GetByDateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByDateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 101:
		result := NewGetByDateSwitchingProtocols()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 102:
		result := NewGetByDateProcessing()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 103:
		result := NewGetByDateCheckpoint()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 104:
		result := NewGetByDateStatus104()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 105:
		result := NewGetByDateStatus105()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 106:
		result := NewGetByDateStatus106()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 200:
		result := NewGetByDateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewGetByDateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 202:
		result := NewGetByDateAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 302:
		result := NewGetByDateFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetByDateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetByDateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetByDateSwitchingProtocols creates a GetByDateSwitchingProtocols with default headers values
func NewGetByDateSwitchingProtocols() *GetByDateSwitchingProtocols {
	return &GetByDateSwitchingProtocols{}
}

/* GetByDateSwitchingProtocols describes a response with status code 101, with default header values.

No API Key was specified or an invalid API Key was specified.
*/
type GetByDateSwitchingProtocols struct {
	Payload *models.Error
}

func (o *GetByDateSwitchingProtocols) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateSwitchingProtocols  %+v", 101, o.Payload)
}
func (o *GetByDateSwitchingProtocols) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateSwitchingProtocols) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateProcessing creates a GetByDateProcessing with default headers values
func NewGetByDateProcessing() *GetByDateProcessing {
	return &GetByDateProcessing{}
}

/* GetByDateProcessing describes a response with status code 102, with default header values.

The account this API request is coming from is inactive.
*/
type GetByDateProcessing struct {
	Payload *models.Error
}

func (o *GetByDateProcessing) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateProcessing  %+v", 102, o.Payload)
}
func (o *GetByDateProcessing) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateProcessing) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateCheckpoint creates a GetByDateCheckpoint with default headers values
func NewGetByDateCheckpoint() *GetByDateCheckpoint {
	return &GetByDateCheckpoint{}
}

/* GetByDateCheckpoint describes a response with status code 103, with default header values.

The requested API endpoint does not exist.
*/
type GetByDateCheckpoint struct {
	Payload *models.Error
}

func (o *GetByDateCheckpoint) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateCheckpoint  %+v", 103, o.Payload)
}
func (o *GetByDateCheckpoint) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateCheckpoint) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateStatus104 creates a GetByDateStatus104 with default headers values
func NewGetByDateStatus104() *GetByDateStatus104 {
	return &GetByDateStatus104{}
}

/* GetByDateStatus104 describes a response with status code 104, with default header values.

The maximum allowed API amount of monthly API requests has been reached.
*/
type GetByDateStatus104 struct {
	Payload *models.Error
}

func (o *GetByDateStatus104) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateStatus104  %+v", 104, o.Payload)
}
func (o *GetByDateStatus104) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateStatus104) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateStatus105 creates a GetByDateStatus105 with default headers values
func NewGetByDateStatus105() *GetByDateStatus105 {
	return &GetByDateStatus105{}
}

/* GetByDateStatus105 describes a response with status code 105, with default header values.

The current subscription plan does not support this API endpoint.
*/
type GetByDateStatus105 struct {
	Payload *models.Error
}

func (o *GetByDateStatus105) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateStatus105  %+v", 105, o.Payload)
}
func (o *GetByDateStatus105) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateStatus105) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateStatus106 creates a GetByDateStatus106 with default headers values
func NewGetByDateStatus106() *GetByDateStatus106 {
	return &GetByDateStatus106{}
}

/* GetByDateStatus106 describes a response with status code 106, with default header values.

The current request did not return any results.
*/
type GetByDateStatus106 struct {
	Payload *models.Error
}

func (o *GetByDateStatus106) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateStatus106  %+v", 106, o.Payload)
}
func (o *GetByDateStatus106) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateStatus106) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateOK creates a GetByDateOK with default headers values
func NewGetByDateOK() *GetByDateOK {
	return &GetByDateOK{}
}

/* GetByDateOK describes a response with status code 200, with default header values.

The foreign exchange reference rates
*/
type GetByDateOK struct {
	Payload *models.Rates
}

func (o *GetByDateOK) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateOK  %+v", 200, o.Payload)
}
func (o *GetByDateOK) GetPayload() *models.Rates {
	return o.Payload
}

func (o *GetByDateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Rates)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateCreated creates a GetByDateCreated with default headers values
func NewGetByDateCreated() *GetByDateCreated {
	return &GetByDateCreated{}
}

/* GetByDateCreated describes a response with status code 201, with default header values.

An invalid base currency has been entered.
*/
type GetByDateCreated struct {
	Payload *models.Error
}

func (o *GetByDateCreated) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateCreated  %+v", 201, o.Payload)
}
func (o *GetByDateCreated) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateAccepted creates a GetByDateAccepted with default headers values
func NewGetByDateAccepted() *GetByDateAccepted {
	return &GetByDateAccepted{}
}

/* GetByDateAccepted describes a response with status code 202, with default header values.

One or more invalid symbols have been specified.
*/
type GetByDateAccepted struct {
	Payload *models.Error
}

func (o *GetByDateAccepted) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateAccepted  %+v", 202, o.Payload)
}
func (o *GetByDateAccepted) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateFound creates a GetByDateFound with default headers values
func NewGetByDateFound() *GetByDateFound {
	return &GetByDateFound{}
}

/* GetByDateFound describes a response with status code 302, with default header values.

An invalid date has been specified. [historical, convert]
*/
type GetByDateFound struct {
	Payload *models.Error
}

func (o *GetByDateFound) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateFound  %+v", 302, o.Payload)
}
func (o *GetByDateFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateForbidden creates a GetByDateForbidden with default headers values
func NewGetByDateForbidden() *GetByDateForbidden {
	return &GetByDateForbidden{}
}

/* GetByDateForbidden describes a response with status code 403, with default header values.

No or an invalid amount has been specified. [convert]
*/
type GetByDateForbidden struct {
	Payload *models.Error
}

func (o *GetByDateForbidden) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateForbidden  %+v", 403, o.Payload)
}
func (o *GetByDateForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByDateNotFound creates a GetByDateNotFound with default headers values
func NewGetByDateNotFound() *GetByDateNotFound {
	return &GetByDateNotFound{}
}

/* GetByDateNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type GetByDateNotFound struct {
	Payload *models.Error
}

func (o *GetByDateNotFound) Error() string {
	return fmt.Sprintf("[GET /{date}][%d] getByDateNotFound  %+v", 404, o.Payload)
}
func (o *GetByDateNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetByDateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
