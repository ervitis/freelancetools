// Code generated by go-swagger; DO NOT EDIT.

package rates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ervitis/freelancetools/exchangerate/models"
)

// ConvertReader is a Reader for the Convert structure.
type ConvertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConvertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConvertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewConvertNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewConvertTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewConvertInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewConvertOK creates a ConvertOK with default headers values
func NewConvertOK() *ConvertOK {
	return &ConvertOK{}
}

/* ConvertOK describes a response with status code 200, with default header values.

The foreign exchange reference rates
*/
type ConvertOK struct {
	Payload *models.Rates
}

func (o *ConvertOK) Error() string {
	return fmt.Sprintf("[GET /historical][%d] convertOK  %+v", 200, o.Payload)
}
func (o *ConvertOK) GetPayload() *models.Rates {
	return o.Payload
}

func (o *ConvertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Rates)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConvertNotFound creates a ConvertNotFound with default headers values
func NewConvertNotFound() *ConvertNotFound {
	return &ConvertNotFound{}
}

/* ConvertNotFound describes a response with status code 404, with default header values.

The requested resource does not exist
*/
type ConvertNotFound struct {
	Payload *models.Error
}

func (o *ConvertNotFound) Error() string {
	return fmt.Sprintf("[GET /historical][%d] convertNotFound  %+v", 404, o.Payload)
}
func (o *ConvertNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *ConvertNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConvertTooManyRequests creates a ConvertTooManyRequests with default headers values
func NewConvertTooManyRequests() *ConvertTooManyRequests {
	return &ConvertTooManyRequests{}
}

/* ConvertTooManyRequests describes a response with status code 429, with default header values.

Rate limit
*/
type ConvertTooManyRequests struct {
	Payload *models.Error
}

func (o *ConvertTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /historical][%d] convertTooManyRequests  %+v", 429, o.Payload)
}
func (o *ConvertTooManyRequests) GetPayload() *models.Error {
	return o.Payload
}

func (o *ConvertTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConvertInternalServerError creates a ConvertInternalServerError with default headers values
func NewConvertInternalServerError() *ConvertInternalServerError {
	return &ConvertInternalServerError{}
}

/* ConvertInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ConvertInternalServerError struct {
	Payload *models.Error
}

func (o *ConvertInternalServerError) Error() string {
	return fmt.Sprintf("[GET /historical][%d] convertInternalServerError  %+v", 500, o.Payload)
}
func (o *ConvertInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *ConvertInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
